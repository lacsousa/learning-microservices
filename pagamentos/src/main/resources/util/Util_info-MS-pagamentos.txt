Some util information

Config Git logline

git config --global alias.logline "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

git logline


--------------------
for running in apps that test API like insomnia or Postman

- POST: http://localhost:8082/pagamentos-ms/pagamentos

Body:

{
    "valor": 279,
    "nome": "Líris",
    "numero": "22222",
    "expiracao": "10/29",
    "codigo": "123",
    "pedidoId": 1,
    "formaDePagamentoId": 1
 }


{
    "valor": 150,
    "nome": "Lívian",
    "numero": "55555",
    "expiracao": "05/31",
    "codigo": "456",
    "pedidoId": 2,
    "formaDePagamentoId": 1
 }


 - PUT: http://localhost:8082/pagamentos-ms/pagamentos/2

 {
     "valor": 279,
     "nome": "Karinne",
     "numero": "555555",
     "expiracao": "10/29",
     "codigo": "123",
     "pedidoId": 1,
     "formaDePagamentoId": 1,
 	  "status": "CRIADO"
 }

 -----------------

 * A utilizar o Open Feign do Spring Cloud para conseguir projetar a comunicação síncrona entre microsserviços;

 * Implementar no serviço de pagamentos uma requisição do tipo PUT para o serviço de pedidos, para informar que o pedido
  foi pago corretamente;

 * O conceito de circuit breaker, que interrompe um chamado a um serviço quando as requisições com falha de comunicação
 atingirem um número específico;

 * A implementar o fallback, que é a forma com que um microsserviço vai tratar a falha de comunicação, ou seja,
 uma estratégia para que a inoperabilidade de um serviço não afete o outro.

 ** Você desenvolveu um microsserviço de pagamentos do zero, criando controlador, modelos,
 dto (data transfer object), repository, conectou sua aplicação a um banco de dados MySQL,
 utilizou uma arquitetura fazendo service discovery, centralizando requisições através de um API Gateway,
 fazendo balanceamento de carga e ainda implementou comunicação síncrona usando ferramentas do Spring Cloud,
 além de projetar conceitos de circuit breaker e fallback para prevenir falhas ou inoperabilidade em algum dos microsserviços.
 

  -----------------